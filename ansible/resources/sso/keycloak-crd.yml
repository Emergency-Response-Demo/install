kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: keycloaks.keycloak.org
spec:
  group: keycloak.org
  subresources:
    status: {}
  names:
    plural: keycloaks
    singular: keycloak
    kind: Keycloak
    listKind: KeycloakList
  scope: Namespaced
  conversion:
    strategy: None
  preserveUnknownFields: true
  version: v1alpha1
  validation:
    openAPIV3Schema:
      description: Keycloak is the Schema for the keycloaks API
      type: object
      properties:
        apiVersion:
          description: >-
            APIVersion defines the versioned schema of this representation of an
            object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: >-
            Kind is a string value representing the REST resource this object
            represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: KeycloakSpec defines the desired state of Keycloak
          type: object
          properties:
            extensions:
              description: >-
                A list of extensions, where each one is a URL to a JAR files
                that will be deployed in Keycloak.
              type: array
              items:
                type: string
            externalAccess:
              description: Controls external Ingress/Route settings.
              type: object
              properties:
                enabled:
                  description: >-
                    If set to true, the Operator will create an Ingress or a
                    Route pointing to Keycloak.
                  type: boolean
            externalDatabase:
              description: >-
                Controls external database settings. Using an external database
                requires providing a secret containing credentials as well as
                connection details. Here's an example of such secret: 
                     apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque 
                 Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret 
                 For more information, please refer to the Operator documentation.
              type: object
              properties:
                enabled:
                  description: >-
                    If set to true, the Operator will use an external database.
                    pointing to Keycloak.
                  type: boolean
            instances:
              description: Number of Keycloak instances in HA mode. Default is 1.
              type: integer
            podDisruptionBudget:
              description: Specify PodDisruptionBudget configuration
              type: object
              properties:
                enabled:
                  description: >-
                    If set to true, the operator will create a
                    PodDistruptionBudget for the Keycloak deployment and set its
                    `maxUnavailable` value to 1
                  type: boolean
            profile:
              description: >-
                Profile used for controlling Operator behavior. Default is
                empty.
              type: string
        status:
          description: KeycloakStatus defines the observed state of Keycloak
          type: object
          required:
            - credentialSecret
            - internalURL
            - message
            - phase
            - ready
            - version
          properties:
            credentialSecret:
              description: The secret where the admin credentials are to be found
              type: string
            internalURL:
              description: >-
                Service IP and Port for in-cluster access to the keycloak
                instance
              type: string
            message:
              description: >-
                Human-readable message indicating details about current operator
                phase or error.
              type: string
            phase:
              description: Current phase of the operator.
              type: string
            ready:
              description: True if all resources are in a ready state and all work is done.
              type: boolean
            secondaryResources:
              description: >-
                A map of all the secondary resources types and names created for
                this CR. e.g "Deployment": [ "DeploymentName1",
                "DeploymentName2" ]
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
            version:
              description: Version of Keycloak or RHSSO running on the cluster
              type: string
  versions:
    - name: v1alpha1
      served: true
      storage: true