apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ kafka_lag_exporter_deployment_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ kafka_lag_exporter_deployment_name }}
      app.kubernetes.io/instance: {{ kafka_lag_exporter_release }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ kafka_lag_exporter_deployment_name }}
        app.kubernetes.io/instance: {{ kafka_lag_exporter_release }}
    spec:
      serviceAccountName: {{ kafka_lag_exporter_serviceaccount }}
      containers:
        - name: {{ kafka_lag_exporter_deployment_name }}
          image: "{{ kafka_lag_exporter_image }}"
          imagePullPolicy: Always
          env: []
          ports:
            - name: http
              containerPort: {{ kafka_lag_exporter_service_port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: config-volume
              mountPath: /opt/docker/conf/
          resources:
            limits:
              cpu: 100m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: config-volume
          configMap:
            name: {{ kafka_lag_exporter_configmap_name }}
