---

- name: "create {{ service_account }} service account for {{ application_name }} application"
  oc_serviceaccount:
    oc_binary: "{{ openshift_cli }}"
    state: present
    name: "{{ service_account }}"
    namespace: "{{ namespace }}"

- name: "give cluster view privileges to {{ service_account }} service account"
  oc_adm_policy_user:
    state: present
    oc_binary: "{{ openshift_cli }}"
    resource_kind: role
    resource_name: view
    user: "system:serviceaccount:{{ namespace }}:{{ service_account }}"
    namespace: "{{ namespace }}"
    rolebinding_name: "{{ service_account }}-view"

- name: get postgresql credentials secret
  oc_secret:
    state: list
    oc_binary: "{{ openshift_cli }}"
    namespace: "{{ namespace_postgresql }}"
    decode: true
    name: "{{ postgresql_credentials_secret }}"
  register: postgresql_credentials

- set_fact:
    database_user: "{{ postgresql_credentials.ansible_module_results.decoded[\"database-user\"] }}"
    database_password: "{{ postgresql_credentials.ansible_module_results.decoded[\"database-password\"] }}"
    database_name: "{{ postgresql_credentials.ansible_module_results.decoded[\"database-name\"] }}"

- name: copy application properties template
  template:
    src: "{{ resources_dir }}/{{ application_properties }}"
    dest: "{{ work_dir }}/{{ application_properties }}"

- name: "create {{ application_configmap }} application configmap"
  oc_configmap:
    oc_binary: "{{ openshift_cli }}"
    state: present
    name: "{{ application_configmap }}"
    namespace: "{{ namespace }}"
    from_file:
      dir: "{{ work_dir }}/{{ application_properties }}"

- import_tasks: deploy_from_image.yml
