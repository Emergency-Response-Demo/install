---

- name: copy operator group template
  template:
    src: "{{ resources_dir }}/{{ apicurito_operatorgroup_template }}"
    dest: "{{ work_dir }}/{{ apicurito_operatorgroup_template }}"
  vars:
    operatorgroup_name: "{{ apicurito_operatorgroup_name }}"
    operatorgroup_target_namespace: "{{ namespace }}"

- name: "create {{ apicurito_operatorgroup_name }} operatorgroup in {{ namespace }}"
  oc_obj:
    oc_binary: "{{ openshift_cli }}"
    state: present
    kind: operatorgroup
    namespace: "{{ namespace }}"
    name: "{{ apicurito_operatorgroup_name }}"
    files:
      - "{{ work_dir }}/{{ apicurito_operatorgroup_template }}"

- name: get packagemanifest for apicurito operator
  oc_obj:
    oc_binary: "{{ openshift_cli }}"
    state: list
    kind: packagemanifest
    namespace: openshift-marketplace
    name: "{{ apicurito_operator_packagemanifest }}"
  register: r_packagemanifest_apicurito
  
- name: set facts for apicurito operator
  set_fact:
    apicurito_operator_subscription_channel: "{{ r_packagemanifest_apicurito.ansible_module_results.results[0].status.defaultChannel }}"
    apicurito_operator_subscription_package_name: "{{ r_packagemanifest_apicurito.ansible_module_results.results[0].status.packageName }}"
    apicurito_operator_subscription_catalog_source: "{{ r_packagemanifest_apicurito.ansible_module_results.results[0].status.catalogSource }}"
    apicurito_operator_subscription_catalog_source_namespace: "{{ r_packagemanifest_apicurito.ansible_module_results.results[0].status.catalogSourceNamespace }}"

- name: "copy template for {{ apicurito_subscription_name }} subscription resource"
  template:
    src: "{{ resources_dir }}/{{ apicurito_subscription_template }}"
    dest: "{{ work_dir }}/{{ apicurito_subscription_template }}"
  vars:
    subscription_name: "{{ apicurito_subscription_name }}"
    subscription_catalog_source: "{{ apicurito_operator_subscription_catalog_source }}"
    subscription_catalog_source_namespace: "{{ apicurito_operator_subscription_catalog_source_namespace }}"
    subscription_channel: "{{ apicurito_operator_subscription_channel }}"
    subscription_package_name: "{{ apicurito_operator_subscription_package_name }}"
    subscription_automatic_installplan_approval: "{{ apicurito_subscription_automatic_installplan_approval }}"
    subscription_starting_csv: "{{ apicurito_subscription_starting_csv }}"

- name: "create subscription for apicurito operator in {{ namespace }}"
  oc_obj:
    state: present
    oc_binary: "{{ openshift_cli }}"
    name: "{{ apicurito_subscription_name }}"
    namespace: "{{ namespace }}"
    kind: Subscription
    files:
      - "{{ work_dir }}/{{ apicurito_subscription_template }}"

- name: wait until installplan is created
  oc_obj:
    state: list
    oc_binary: "{{ openshift_cli }}"
    kind: InstallPlan
    namespace: "{{ namespace }}"
  register: r_apicurito_install_plan
  retries: 30
  delay: 5
  until:
    - r_apicurito_install_plan.ansible_module_results.results | length > 0
    - r_apicurito_install_plan | to_json | from_json | json_query(jmesquery) | length > 0
  vars:
    jmesquery: "ansible_module_results.results[0].items[*].spec.clusterServiceVersionNames[] | [?contains(@, 'apicuritooperator') == `true`]"

- name: manually approve installplan
  when: not apicurito_subscription_automatic_installplan_approval
  block:
  - name: set install plan name
    set_fact:
      install_plan_name: "{{ r_apicurito_install_plan.ansible_module_results.results[0]['items'] | to_json | from_json | json_query(query) }}"
    vars:
      query: >-
        [?starts_with(spec.clusterServiceVersionNames[0], 'apicuritooperator')].metadata.name|[0]

  - name: approve installplan
    shell: |
      {{ openshift_cli }} patch installplan {{ install_plan_name }} --type='merge' -p '{"spec":{"approved":true}}' -n {{ namespace }}

- name: find all apicurito related CSVs
  set_fact:
    apicurito_csvs: "{{ r_apicurito_install_plan.ansible_module_results.results[0]['items'] | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'apicuritooperator')].spec.clusterServiceVersionNames

- name: wait until all CSVs are succeeded
  oc_obj:
    state: list
    oc_binary: "{{ openshift_cli }}"    
    kind: ClusterServiceVersion
    name: "{{ item }}"
    namespace: "{{ namespace }}"
  register: r_apicurito_csv
  retries: 180
  delay: 10
  until:
  - r_apicurito_csv.ansible_module_results.results[0].status.phase is defined
  - r_apicurito_csv.ansible_module_results.results[0].status.phase | length > 0
  - r_apicurito_csv.ansible_module_results.results[0].status.phase == "Succeeded"
  loop: "{{ apicurito_csvs[0] }}"

- name: copy apicurito template
  template:
    src: "{{ resources_dir }}/{{ apicurito_template }}"
    dest: "{{ work_dir }}/{{ apicurito_template }}"

- name: deploy apicurito cr
  oc_obj:
    state: present
    oc_binary: "{{ openshift_cli }}"
    namespace: "{{ namespace }}"
    name: "{{ apicurito_name }}"
    kind: apicurito
    files:
      - "{{ work_dir }}/{{ apicurito_template }}"
