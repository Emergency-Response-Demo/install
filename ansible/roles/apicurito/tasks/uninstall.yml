---

- name: delete apicurito cr
  oc_obj:
    state: absent
    oc_binary: "{{ openshift_cli }}"
    namespace: "{{ namespace }}"
    name: "{{ apicurito_name }}"
    kind: apicurito

- name: "get all install plans in {{ namespace }} namespace"
  oc_obj:
    state: list
    oc_binary: "{{ openshift_cli }}"
    kind: InstallPlan
    namespace: "{{ namespace }}"
  register: r_apicurito_install_plan
  # until:
  #   - r_apicurito_install_plan.ansible_module_results.results | length > 0
  #   - r_apicurito_install_plan | to_json | from_json | json_query(jmesquery) | length > 0
  # vars:
  #   jmesquery: "ansible_module_results.results[0].items[*].spec.clusterServiceVersionNames[] | [?contains(@, 'apicuritooperator') == `true`]"

- name: set apicurito install plan name
  set_fact:
    install_plan_name: "{{ r_apicurito_install_plan.ansible_module_results.results[0]['items'] | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'apicuritooperator')].metadata.name|[0]

- name: find all apicurito related CSVs
  set_fact:
    apicurito_csvs: "{{ r_apicurito_install_plan.ansible_module_results.results[0]['items'] | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'apicuritooperator')].spec.clusterServiceVersionNames

- name: remove all apicurito related csv
  when: apicurito_csvs | length > 0
  oc_obj:
    state: absent
    oc_binary: "{{ openshift_cli }}"
    kind: ClusterServiceVersion
    name: "{{ item }}"
    namespace: "{{ namespace }}"
  loop: "{{ apicurito_csvs[0] }}"

- name: "delete subscription for apicurito operator in {{ namespace }}"
  oc_obj:
    state: absent
    oc_binary: "{{ openshift_cli }}"
    name: "{{ apicurito_subscription_name }}"
    namespace: "{{ namespace }}"
    kind: Subscription

- name: "remove apicurito installplan in {{ namespace }}"
  when:
  - install_plan_name is defined
  - install_plan_name | default("") | length > 0
  oc_obj:
    state: absent
    oc_binary: "{{ openshift_cli }}"
    kind: InstallPlan
    namespace: "{{ namespace }}"
    name: "{{ install_plan_name }}"
  
