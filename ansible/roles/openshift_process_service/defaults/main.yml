---

application_name: "{{ process_service_application_name }}"

application_configmap: process-service
logging_configmap: process-service-logging

resources_limits_cpu: 1000m
resources_limits_memory: 1Gi
resources_requests_cpu: 250m
resources_requests_memory: 500Mi

kafka_bootstrap_service: "{{ kafka_cluster }}-kafka-bootstrap.{{ namespace_kafka_cluster }}.svc"
kafka_bootstrap_port: 9092
kafka_bootstrap_address: "{{ kafka_bootstrap_service }}:{{ kafka_bootstrap_port }}"
kafka_groupid: process-service
kafka_consumer_concurrency: 5

kafka_incident_reported_event_topic: topic-incident-event
kafka_create_mission_command_topic: topic-mission-command
kafka_mission_event_topic: topic-mission-event
kafka_set_responder_unavailable_command_topic: topic-responder-command
kafka_update_responder_command_topic: topic-responder-command
kafka_responder_updated_event_topic: topic-responder-event
kafka_update_incident_command_topic: topic-incident-command
kafka_incident_assignment_event_topic: topic-incident-event

process_service_postgresql_template: "postgresql.yml"
process_service_postgresql_init_configmap: "{{ process_service_postgresql_service_name }}-init"
process_service_postgresql_configmap: "{{ process_service_postgresql_service_name }}-config"
process_service_postgresql_credentials_secret: "{{ process_service_postgresql_service_name }}"
process_service_postgresql_image_stream_template: postgresql-is.yml
process_service_postgresql_image_stream: postgres-10-decoderbufs
process_service_postgresql_image_stream_tag: v1.1.2.Final
process_service_postgresql_image_stream_namespace: "{{ namespace }}"
process_service_postgresql_volume_capacity: 5Gi
process_service_postgresql_max_connections: 100
process_service_postgresql_max_prepared_transactions: 100
process_service_postgresql_resources_requests_cpu: 100m
process_service_postgresql_resources_requests_memory: 256Mi
process_service_postgresql_resources_limits_cpu: 500m
process_service_postgresql_resources_limits_memory: 512Mi

kafka_connector_template: kafka-connector.yml
kafka_connector_name: debezium-postgres-process-service
kafka_connector_tasks_max: 1
kafka_connector_db_host: "{{ process_service_postgresql_service_name }}.{{ namespace }}.svc"
kafka_connector_db_port: 5432
kafka_connector_db_user: postgres
kafka_connector_db_name: "{{ process_service_postgresql_database }}"
kafka_connector_db_server_name: rhpam1
kafka_connector_schema_whitelist: public
kafka_connector_table_whitelist: public.process_service_outbox

process_service_postgresql_host: "{{ process_service_postgresql_service_name }}"

narayana_dbcp_max_total: 20

quartz_configuration: "/app/config/jbpm-quartz.properties"
quartz_datasource_dbcp_max_total: 20
quartz_clustered: true

logging_style: dev

service_account: process-service

buildconfig_template: process-service-binary-buildconfig.yml
buildconfig_name: "{{ application_name }}-binary"

pipeline_buildconfig_name: "{{ application_name }}-pipeline"
pipeline_buildconfig_template: process-service-pipeline.yml

imagestream_template: process-service-imagestream.yml
imagestream_name: "{{ application_name }}"

image_imagestream_name: "{{ application_name }}"
image_imagestream_template: process-service-image-is.yml

application_template: process-service.yml

openjdk_template: openjdk-imagestream.yml
openjdk_imagestream_name: openjdk18-openshift
openjdk_imagestream_tag: 1.6

application_image: openjdk18-openshift:1.6
application_image_namespace: openshift

incident_process_assignment_delay: PT20S

responder_service_scheme: http
responder_service_url: "{{ responder_service_application_name }}.{{ namespace }}.svc:8080"
responder_service_available_responders_path: /responders/available
responder_service_available_responders_limit: 100

incident_priority_service_scheme: http
incident_priority_service_url: "{{ incident_priority_service_application_name }}.{{ namespace }}.svc:8080"
incident_priority_service_incident_priority_path: "/priority/{incidentId}"

disaster_service_scheme: http
disaster_service_url: "{{ disaster_service_application_name }}.{{ namespace }}.svc:8080"
disaster_service_shelters_path: "/shelters"

prometheus_endpoint_path: "/actuator/prometheus"
prometheus_endpoint_port: 8080
